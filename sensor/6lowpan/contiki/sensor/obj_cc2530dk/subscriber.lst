                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.1.1 #7100 (Oct 29 2014) (Linux)
                              4 ; This file was generated Thu Dec  3 09:42:07 2015
                              5 ;--------------------------------------------------------
                              6 	.module subscriber
                              7 	.optsdcc -mmcs51 --model-huge
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _memb_free
                             13 	.globl _memb_alloc
                             14 	.globl _memb_init
                             15 	.globl _memcpy
                             16 	.globl _ACTIVE
                             17 	.globl _TX_BYTE
                             18 	.globl _RX_BYTE
                             19 	.globl _ERR
                             20 	.globl _FE
                             21 	.globl _SLAVE
                             22 	.globl _RE
                             23 	.globl _MODE
                             24 	.globl _T3OVFIF
                             25 	.globl _T3CH0IF
                             26 	.globl _T3CH1IF
                             27 	.globl _T4OVFIF
                             28 	.globl _T4CH0IF
                             29 	.globl _T4CH1IF
                             30 	.globl _OVFIM
                             31 	.globl _B_0
                             32 	.globl _B_1
                             33 	.globl _B_2
                             34 	.globl _B_3
                             35 	.globl _B_4
                             36 	.globl _B_5
                             37 	.globl _B_6
                             38 	.globl _B_7
                             39 	.globl _P2IF
                             40 	.globl _UTX0IF
                             41 	.globl _UTX1IF
                             42 	.globl _P1IF
                             43 	.globl _WDTIF
                             44 	.globl _ACC_0
                             45 	.globl _ACC_1
                             46 	.globl _ACC_2
                             47 	.globl _ACC_3
                             48 	.globl _ACC_4
                             49 	.globl _ACC_5
                             50 	.globl _ACC_6
                             51 	.globl _ACC_7
                             52 	.globl _P
                             53 	.globl _F1
                             54 	.globl _OV
                             55 	.globl _RS0
                             56 	.globl _RS1
                             57 	.globl _F0
                             58 	.globl _AC
                             59 	.globl _CY
                             60 	.globl _DMAIF
                             61 	.globl _T1IF
                             62 	.globl _T2IF
                             63 	.globl _T3IF
                             64 	.globl _T4IF
                             65 	.globl _P0IF
                             66 	.globl _STIF
                             67 	.globl _DMAIE
                             68 	.globl _T1IE
                             69 	.globl _T2IE
                             70 	.globl _T3IE
                             71 	.globl _T4IE
                             72 	.globl _P0IE
                             73 	.globl _RFERRIE
                             74 	.globl _ADCIE
                             75 	.globl _URX0IE
                             76 	.globl _URX1IE
                             77 	.globl _ENCIE
                             78 	.globl _STIE
                             79 	.globl _EA
                             80 	.globl _P2_0
                             81 	.globl _P2_1
                             82 	.globl _P2_2
                             83 	.globl _P2_3
                             84 	.globl _P2_4
                             85 	.globl _P2_5
                             86 	.globl _P2_6
                             87 	.globl _P2_7
                             88 	.globl _ENCIF_0
                             89 	.globl _ENCIF_1
                             90 	.globl _P1_0
                             91 	.globl _P1_1
                             92 	.globl _P1_2
                             93 	.globl _P1_3
                             94 	.globl _P1_4
                             95 	.globl _P1_5
                             96 	.globl _P1_6
                             97 	.globl _P1_7
                             98 	.globl _IT0
                             99 	.globl _RFERRIF
                            100 	.globl _IT1
                            101 	.globl _URX0IF
                            102 	.globl _ADCIF
                            103 	.globl _URX1IF
                            104 	.globl _P0_0
                            105 	.globl _P0_1
                            106 	.globl _P0_2
                            107 	.globl _P0_3
                            108 	.globl _P0_4
                            109 	.globl _P0_5
                            110 	.globl _P0_6
                            111 	.globl _P0_7
                            112 	.globl _WDCTL
                            113 	.globl _U1GCR
                            114 	.globl _U1UCR
                            115 	.globl _U1BAUD
                            116 	.globl _U1DBUF
                            117 	.globl _U1CSR
                            118 	.globl _U0GCR
                            119 	.globl _U0UCR
                            120 	.globl _U0BAUD
                            121 	.globl _U0DBUF
                            122 	.globl _U0CSR
                            123 	.globl _TIMIF
                            124 	.globl _T4CC1
                            125 	.globl _T4CCTL1
                            126 	.globl _T4CC0
                            127 	.globl _T4CCTL0
                            128 	.globl _T4CTL
                            129 	.globl _T4CNT
                            130 	.globl _T3CC1
                            131 	.globl _T3CCTL1
                            132 	.globl _T3CC0
                            133 	.globl _T3CCTL0
                            134 	.globl _T3CTL
                            135 	.globl _T3CNT
                            136 	.globl _T2MSEL
                            137 	.globl _T2IRQM
                            138 	.globl _T2MOVF2
                            139 	.globl _T2MOVF1
                            140 	.globl _T2MOVF0
                            141 	.globl _T2M1
                            142 	.globl _T2M0
                            143 	.globl _T2IRQF
                            144 	.globl _T2EVTCFG
                            145 	.globl _T2CTRL
                            146 	.globl _T1STAT
                            147 	.globl _T1CCTL2
                            148 	.globl _T1CCTL1
                            149 	.globl _T1CCTL0
                            150 	.globl _T1CTL
                            151 	.globl _T1CNTH
                            152 	.globl _T1CNTL
                            153 	.globl _T1CC2H
                            154 	.globl _T1CC2L
                            155 	.globl _T1CC1H
                            156 	.globl _T1CC1L
                            157 	.globl _T1CC0H
                            158 	.globl _T1CC0L
                            159 	.globl _CLKCONSTA
                            160 	.globl _CLKCONCMD
                            161 	.globl _SLEEPSTA
                            162 	.globl _SLEEPCMD
                            163 	.globl _STLOAD
                            164 	.globl _ST2
                            165 	.globl _ST1
                            166 	.globl _ST0
                            167 	.globl _RFERRF
                            168 	.globl _RFIRQF0
                            169 	.globl _RFST
                            170 	.globl _RFD
                            171 	.globl _RFIRQF1
                            172 	.globl _PSBANK
                            173 	.globl _FMAP
                            174 	.globl _MEMCTR
                            175 	.globl __XPAGE
                            176 	.globl _MPAGE
                            177 	.globl _PMUX
                            178 	.globl _P2DIR
                            179 	.globl _P1DIR
                            180 	.globl _P0DIR
                            181 	.globl _P2INP
                            182 	.globl _P1INP
                            183 	.globl _P2SEL
                            184 	.globl _P1SEL
                            185 	.globl _P0SEL
                            186 	.globl _APCFG
                            187 	.globl _PERCFG
                            188 	.globl _P0INP
                            189 	.globl _P2IEN
                            190 	.globl _P1IEN
                            191 	.globl _P0IEN
                            192 	.globl _PICTL
                            193 	.globl _P2IFG
                            194 	.globl _P1IFG
                            195 	.globl _P0IFG
                            196 	.globl _DMAREQ
                            197 	.globl _DMAARM
                            198 	.globl _DMA0CFGH
                            199 	.globl _DMA0CFGL
                            200 	.globl _DMA1CFGH
                            201 	.globl _DMA1CFGL
                            202 	.globl _DMAIRQ
                            203 	.globl _ENCCS
                            204 	.globl _ENCDO
                            205 	.globl _ENCDI
                            206 	.globl _RNDH
                            207 	.globl _RNDL
                            208 	.globl _ADCH
                            209 	.globl _ADCL
                            210 	.globl _ADCCON3
                            211 	.globl _ADCCON2
                            212 	.globl _ADCCON1
                            213 	.globl _B
                            214 	.globl _IRCON2
                            215 	.globl _ACC
                            216 	.globl _PSW
                            217 	.globl _IRCON
                            218 	.globl _IP1
                            219 	.globl _IEN1
                            220 	.globl _IP0
                            221 	.globl _IEN0
                            222 	.globl _P2
                            223 	.globl _S1CON
                            224 	.globl _IEN2
                            225 	.globl _S0CON
                            226 	.globl _DPS
                            227 	.globl _P1
                            228 	.globl _TCON
                            229 	.globl _PCON
                            230 	.globl _DPH1
                            231 	.globl _DPL1
                            232 	.globl _DPH0
                            233 	.globl _DPL0
                            234 	.globl _SP
                            235 	.globl _P0
                            236 	.globl _X_IEEE_ADDR
                            237 	.globl _X_INFOPAGE
                            238 	.globl _X_P2DIR
                            239 	.globl _X_P1DIR
                            240 	.globl _X_P0DIR
                            241 	.globl _X_U1GCR
                            242 	.globl _X_U1UCR
                            243 	.globl _X_U1BAUD
                            244 	.globl _X_U1DBUF
                            245 	.globl _X_U1CSR
                            246 	.globl _X_P2INP
                            247 	.globl _X_P1INP
                            248 	.globl _X_P2SEL
                            249 	.globl _X_P1SEL
                            250 	.globl _X_P0SEL
                            251 	.globl _X_APCFG
                            252 	.globl _X_PERCFG
                            253 	.globl _X_T4CC1
                            254 	.globl _X_T4CCTL1
                            255 	.globl _X_T4CC0
                            256 	.globl _X_T4CCTL0
                            257 	.globl _X_T4CTL
                            258 	.globl _X_T4CNT
                            259 	.globl _X_RFIRQF0
                            260 	.globl _X_T1CCTL2
                            261 	.globl _X_T1CCTL1
                            262 	.globl _X_T1CCTL0
                            263 	.globl _X_T1CTL
                            264 	.globl _X_T1CNTH
                            265 	.globl _X_T1CNTL
                            266 	.globl _X_RFST
                            267 	.globl _X_T1CC2H
                            268 	.globl _X_T1CC2L
                            269 	.globl _X_T1CC1H
                            270 	.globl _X_T1CC1L
                            271 	.globl _X_T1CC0H
                            272 	.globl _X_T1CC0L
                            273 	.globl _X_RFD
                            274 	.globl _X_TIMIF
                            275 	.globl _X_DMAREQ
                            276 	.globl _X_DMAARM
                            277 	.globl _X_DMA0CFGH
                            278 	.globl _X_DMA0CFGL
                            279 	.globl _X_DMA1CFGH
                            280 	.globl _X_DMA1CFGL
                            281 	.globl _X_DMAIRQ
                            282 	.globl _X_T3CC1
                            283 	.globl _X_T3CCTL1
                            284 	.globl _X_T3CC0
                            285 	.globl _X_T3CCTL0
                            286 	.globl _X_T3CTL
                            287 	.globl _X_T3CNT
                            288 	.globl _X_WDCTL
                            289 	.globl _X_MEMCTR
                            290 	.globl _X_CLKCONCMD
                            291 	.globl _X_U0GCR
                            292 	.globl _X_U0UCR
                            293 	.globl _X_T2MSEL
                            294 	.globl _X_U0BAUD
                            295 	.globl _X_U0DBUF
                            296 	.globl _X_RFERRF
                            297 	.globl _X_SLEEPCMD
                            298 	.globl _X_RNDH
                            299 	.globl _X_RNDL
                            300 	.globl _X_ADCH
                            301 	.globl _X_ADCL
                            302 	.globl _X_ADCCON3
                            303 	.globl _X_ADCCON2
                            304 	.globl _X_ADCCON1
                            305 	.globl _X_ENCCS
                            306 	.globl _X_ENCDO
                            307 	.globl _X_ENCDI
                            308 	.globl _X_T1STAT
                            309 	.globl _X_PMUX
                            310 	.globl _X_STLOAD
                            311 	.globl _X_P2IEN
                            312 	.globl _X_P0IEN
                            313 	.globl _X_T2IRQM
                            314 	.globl _X_T2MOVF2
                            315 	.globl _X_T2MOVF1
                            316 	.globl _X_T2MOVF0
                            317 	.globl _X_T2M1
                            318 	.globl _X_T2M0
                            319 	.globl _X_T2IRQF
                            320 	.globl _X_P2
                            321 	.globl _X_PSBANK
                            322 	.globl _X_FMAP
                            323 	.globl _X_CLKCONSTA
                            324 	.globl _X_SLEEPSTA
                            325 	.globl _X_T2EVTCFG
                            326 	.globl _X_ST2
                            327 	.globl _X_ST1
                            328 	.globl _X_ST0
                            329 	.globl _X_T2CTRL
                            330 	.globl _X__XPAGE
                            331 	.globl _X_MPAGE
                            332 	.globl _X_RFIRQF1
                            333 	.globl _X_P1
                            334 	.globl _X_P0INP
                            335 	.globl _X_P1IEN
                            336 	.globl _X_PICTL
                            337 	.globl _X_P2IFG
                            338 	.globl _X_P1IFG
                            339 	.globl _X_P0IFG
                            340 	.globl _X_U0CSR
                            341 	.globl _X_P0
                            342 	.globl _USBF5
                            343 	.globl _USBF4
                            344 	.globl _USBF3
                            345 	.globl _USBF2
                            346 	.globl _USBF1
                            347 	.globl _USBF0
                            348 	.globl _USBCNTH
                            349 	.globl _USBCNTL
                            350 	.globl _USBCNT0
                            351 	.globl _USBCSOH
                            352 	.globl _USBCSOL
                            353 	.globl _USBMAXO
                            354 	.globl _USBCSIH
                            355 	.globl _USBCSIL
                            356 	.globl _USBCS0
                            357 	.globl _USBMAXI
                            358 	.globl _USBCTRL
                            359 	.globl _USBINDEX
                            360 	.globl _USBFRMH
                            361 	.globl _USBFRML
                            362 	.globl _USBCIE
                            363 	.globl _USBOIE
                            364 	.globl _USBIIE
                            365 	.globl _USBCIF
                            366 	.globl _USBOIF
                            367 	.globl _USBIIF
                            368 	.globl _USBPOW
                            369 	.globl _USBADDR
                            370 	.globl _CSPT
                            371 	.globl _CSPZ
                            372 	.globl _CSPY
                            373 	.globl _CSPX
                            374 	.globl _CSPSTAT
                            375 	.globl _CSPCTRL
                            376 	.globl _CSPPROG23
                            377 	.globl _CSPPROG22
                            378 	.globl _CSPPROG21
                            379 	.globl _CSPPROG20
                            380 	.globl _CSPPROG19
                            381 	.globl _CSPPROG18
                            382 	.globl _CSPPROG17
                            383 	.globl _CSPPROG16
                            384 	.globl _CSPPROG15
                            385 	.globl _CSPPROG14
                            386 	.globl _CSPPROG13
                            387 	.globl _CSPPROG12
                            388 	.globl _CSPPROG11
                            389 	.globl _CSPPROG10
                            390 	.globl _CSPPROG9
                            391 	.globl _CSPPROG8
                            392 	.globl _CSPPROG7
                            393 	.globl _CSPPROG6
                            394 	.globl _CSPPROG5
                            395 	.globl _CSPPROG4
                            396 	.globl _CSPPROG3
                            397 	.globl _CSPPROG2
                            398 	.globl _CSPPROG1
                            399 	.globl _CSPPROG0
                            400 	.globl _RFC_OBS_CTRL2
                            401 	.globl _RFC_OBS_CTRL1
                            402 	.globl _RFC_OBS_CTRL0
                            403 	.globl _TXFILTCFG
                            404 	.globl _PTEST1
                            405 	.globl _PTEST0
                            406 	.globl _ATEST
                            407 	.globl _DACTEST2
                            408 	.globl _DACTEST1
                            409 	.globl _DACTEST0
                            410 	.globl _MDMTEST1
                            411 	.globl _MDMTEST0
                            412 	.globl _ADCTEST2
                            413 	.globl _ADCTEST1
                            414 	.globl _ADCTEST0
                            415 	.globl _AGCCTRL3
                            416 	.globl _AGCCTRL2
                            417 	.globl _AGCCTRL1
                            418 	.globl _AGCCTRL0
                            419 	.globl _FSCAL3
                            420 	.globl _FSCAL2
                            421 	.globl _FSCAL1
                            422 	.globl _FSCAL0
                            423 	.globl _FSCTRL
                            424 	.globl _RXCTRL
                            425 	.globl _FREQEST
                            426 	.globl _MDMCTRL1
                            427 	.globl _MDMCTRL0
                            428 	.globl _RFRND
                            429 	.globl _RFERRM
                            430 	.globl _RFIRQM1
                            431 	.globl _RFIRQM0
                            432 	.globl _TXLAST_PTR
                            433 	.globl _TXFIRST_PTR
                            434 	.globl _RXP1_PTR
                            435 	.globl _RXLAST_PTR
                            436 	.globl _RXFIRST_PTR
                            437 	.globl _TXFIFOCNT
                            438 	.globl _RXFIFOCNT
                            439 	.globl _RXFIRST
                            440 	.globl _RSSISTAT
                            441 	.globl _RSSI
                            442 	.globl _CCACTRL1
                            443 	.globl _CCACTRL0
                            444 	.globl _FSMCTRL
                            445 	.globl _FIFOPCTRL
                            446 	.globl _FSMSTAT1
                            447 	.globl _FSMSTAT0
                            448 	.globl _TXCTRL
                            449 	.globl _TXPOWER
                            450 	.globl _FREQCTRL
                            451 	.globl _FREQTUNE
                            452 	.globl _RXMASKCLR
                            453 	.globl _RXMASKSET
                            454 	.globl _RXENABLE
                            455 	.globl _FRMCTRL1
                            456 	.globl _FRMCTRL0
                            457 	.globl _SRCEXTEN2
                            458 	.globl _SRCEXTEN1
                            459 	.globl _SRCEXTEN0
                            460 	.globl _SRCSHORTEN2
                            461 	.globl _SRCSHORTEN1
                            462 	.globl _SRCSHORTEN0
                            463 	.globl _SRCMATCH
                            464 	.globl _FRMFILT1
                            465 	.globl _FRMFILT0
                            466 	.globl _SHORT_ADDR1
                            467 	.globl _SHORT_ADDR0
                            468 	.globl _PAN_ID1
                            469 	.globl _PAN_ID0
                            470 	.globl _EXT_ADDR7
                            471 	.globl _EXT_ADDR6
                            472 	.globl _EXT_ADDR5
                            473 	.globl _EXT_ADDR4
                            474 	.globl _EXT_ADDR3
                            475 	.globl _EXT_ADDR2
                            476 	.globl _EXT_ADDR1
                            477 	.globl _EXT_ADDR0
                            478 	.globl _SRCSHORTPENDEN2
                            479 	.globl _SRCSHORTPENDEN1
                            480 	.globl _SRCSHORTPENDEN0
                            481 	.globl _SRCEXTPENDEN2
                            482 	.globl _SRCEXTPENDEN1
                            483 	.globl _SRCEXTPENDEN0
                            484 	.globl _SRCRESINDEX
                            485 	.globl _SRCRESMASK2
                            486 	.globl _SRCRESMASK1
                            487 	.globl _SRCRESMASK0
                            488 	.globl _SRC_ADDR_TABLE
                            489 	.globl _TXFIFO
                            490 	.globl _RXFIFO
                            491 	.globl _RFCORE_RAM
                            492 	.globl _CMPCTL
                            493 	.globl _OPAMPS
                            494 	.globl _OPAMPC
                            495 	.globl _STCV2
                            496 	.globl _STCV1
                            497 	.globl _STCV0
                            498 	.globl _STCS
                            499 	.globl _STCC
                            500 	.globl _T1CC4H
                            501 	.globl _T1CC4L
                            502 	.globl _T1CC3H
                            503 	.globl _T1CC3L
                            504 	.globl _XX_T1CC2H
                            505 	.globl _XX_T1CC2L
                            506 	.globl _XX_T1CC1H
                            507 	.globl _XX_T1CC1L
                            508 	.globl _XX_T1CC0H
                            509 	.globl _XX_T1CC0L
                            510 	.globl _T1CCTL4
                            511 	.globl _T1CCTL3
                            512 	.globl _XX_T1CCTL2
                            513 	.globl _XX_T1CCTL1
                            514 	.globl _XX_T1CCTL0
                            515 	.globl _CLD
                            516 	.globl _IRCTL
                            517 	.globl _CHIPINFO1
                            518 	.globl _CHIPINFO0
                            519 	.globl _FWDATA
                            520 	.globl _FADDRH
                            521 	.globl _FADDRL
                            522 	.globl _FCTL
                            523 	.globl _IVCTRL
                            524 	.globl _BATTMON
                            525 	.globl _SRCRC
                            526 	.globl _DBGDATA
                            527 	.globl _TESTREG0
                            528 	.globl _CHIPID
                            529 	.globl _CHVER
                            530 	.globl _OBSSEL5
                            531 	.globl _OBSSEL4
                            532 	.globl _OBSSEL3
                            533 	.globl _OBSSEL2
                            534 	.globl _OBSSEL1
                            535 	.globl _OBSSEL0
                            536 	.globl _I2CIO
                            537 	.globl _I2CWC
                            538 	.globl _I2CADDR
                            539 	.globl _I2CDATA
                            540 	.globl _I2CSTAT
                            541 	.globl _I2CCFG
                            542 	.globl _OPAMPMC
                            543 	.globl _MONMUX
                            544 	.globl _subscribers_mem_pool_init
                            545 	.globl _subscriber_alloc
                            546 	.globl _subscriber_free
                            547 	.globl _subscriber_value_compare_type_init
                            548 	.globl _subscriber_report_type_init
                            549 ;--------------------------------------------------------
                            550 ; special function registers
                            551 ;--------------------------------------------------------
                            552 	.area RSEG    (ABS,DATA)
   0000                     553 	.org 0x0000
                    0080    554 _P0	=	0x0080
                    0081    555 _SP	=	0x0081
                    0082    556 _DPL0	=	0x0082
                    0083    557 _DPH0	=	0x0083
                    0084    558 _DPL1	=	0x0084
                    0085    559 _DPH1	=	0x0085
                    0087    560 _PCON	=	0x0087
                    0088    561 _TCON	=	0x0088
                    0090    562 _P1	=	0x0090
                    0092    563 _DPS	=	0x0092
                    0098    564 _S0CON	=	0x0098
                    009A    565 _IEN2	=	0x009a
                    009B    566 _S1CON	=	0x009b
                    00A0    567 _P2	=	0x00a0
                    00A8    568 _IEN0	=	0x00a8
                    00A9    569 _IP0	=	0x00a9
                    00B8    570 _IEN1	=	0x00b8
                    00B9    571 _IP1	=	0x00b9
                    00C0    572 _IRCON	=	0x00c0
                    00D0    573 _PSW	=	0x00d0
                    00E0    574 _ACC	=	0x00e0
                    00E8    575 _IRCON2	=	0x00e8
                    00F0    576 _B	=	0x00f0
                    00B4    577 _ADCCON1	=	0x00b4
                    00B5    578 _ADCCON2	=	0x00b5
                    00B6    579 _ADCCON3	=	0x00b6
                    00BA    580 _ADCL	=	0x00ba
                    00BB    581 _ADCH	=	0x00bb
                    00BC    582 _RNDL	=	0x00bc
                    00BD    583 _RNDH	=	0x00bd
                    00B1    584 _ENCDI	=	0x00b1
                    00B2    585 _ENCDO	=	0x00b2
                    00B3    586 _ENCCS	=	0x00b3
                    00D1    587 _DMAIRQ	=	0x00d1
                    00D2    588 _DMA1CFGL	=	0x00d2
                    00D3    589 _DMA1CFGH	=	0x00d3
                    00D4    590 _DMA0CFGL	=	0x00d4
                    00D5    591 _DMA0CFGH	=	0x00d5
                    00D6    592 _DMAARM	=	0x00d6
                    00D7    593 _DMAREQ	=	0x00d7
                    0089    594 _P0IFG	=	0x0089
                    008A    595 _P1IFG	=	0x008a
                    008B    596 _P2IFG	=	0x008b
                    008C    597 _PICTL	=	0x008c
                    00AB    598 _P0IEN	=	0x00ab
                    008D    599 _P1IEN	=	0x008d
                    00AC    600 _P2IEN	=	0x00ac
                    008F    601 _P0INP	=	0x008f
                    00F1    602 _PERCFG	=	0x00f1
                    00F2    603 _APCFG	=	0x00f2
                    00F3    604 _P0SEL	=	0x00f3
                    00F4    605 _P1SEL	=	0x00f4
                    00F5    606 _P2SEL	=	0x00f5
                    00F6    607 _P1INP	=	0x00f6
                    00F7    608 _P2INP	=	0x00f7
                    00FD    609 _P0DIR	=	0x00fd
                    00FE    610 _P1DIR	=	0x00fe
                    00FF    611 _P2DIR	=	0x00ff
                    00AE    612 _PMUX	=	0x00ae
                    0093    613 _MPAGE	=	0x0093
                    0093    614 __XPAGE	=	0x0093
                    00C7    615 _MEMCTR	=	0x00c7
                    009F    616 _FMAP	=	0x009f
                    009F    617 _PSBANK	=	0x009f
                    0091    618 _RFIRQF1	=	0x0091
                    00D9    619 _RFD	=	0x00d9
                    00E1    620 _RFST	=	0x00e1
                    00E9    621 _RFIRQF0	=	0x00e9
                    00BF    622 _RFERRF	=	0x00bf
                    0095    623 _ST0	=	0x0095
                    0096    624 _ST1	=	0x0096
                    0097    625 _ST2	=	0x0097
                    00AD    626 _STLOAD	=	0x00ad
                    00BE    627 _SLEEPCMD	=	0x00be
                    009D    628 _SLEEPSTA	=	0x009d
                    00C6    629 _CLKCONCMD	=	0x00c6
                    009E    630 _CLKCONSTA	=	0x009e
                    00DA    631 _T1CC0L	=	0x00da
                    00DB    632 _T1CC0H	=	0x00db
                    00DC    633 _T1CC1L	=	0x00dc
                    00DD    634 _T1CC1H	=	0x00dd
                    00DE    635 _T1CC2L	=	0x00de
                    00DF    636 _T1CC2H	=	0x00df
                    00E2    637 _T1CNTL	=	0x00e2
                    00E3    638 _T1CNTH	=	0x00e3
                    00E4    639 _T1CTL	=	0x00e4
                    00E5    640 _T1CCTL0	=	0x00e5
                    00E6    641 _T1CCTL1	=	0x00e6
                    00E7    642 _T1CCTL2	=	0x00e7
                    00AF    643 _T1STAT	=	0x00af
                    0094    644 _T2CTRL	=	0x0094
                    009C    645 _T2EVTCFG	=	0x009c
                    00A1    646 _T2IRQF	=	0x00a1
                    00A2    647 _T2M0	=	0x00a2
                    00A3    648 _T2M1	=	0x00a3
                    00A4    649 _T2MOVF0	=	0x00a4
                    00A5    650 _T2MOVF1	=	0x00a5
                    00A6    651 _T2MOVF2	=	0x00a6
                    00A7    652 _T2IRQM	=	0x00a7
                    00C3    653 _T2MSEL	=	0x00c3
                    00CA    654 _T3CNT	=	0x00ca
                    00CB    655 _T3CTL	=	0x00cb
                    00CC    656 _T3CCTL0	=	0x00cc
                    00CD    657 _T3CC0	=	0x00cd
                    00CE    658 _T3CCTL1	=	0x00ce
                    00CF    659 _T3CC1	=	0x00cf
                    00EA    660 _T4CNT	=	0x00ea
                    00EB    661 _T4CTL	=	0x00eb
                    00EC    662 _T4CCTL0	=	0x00ec
                    00ED    663 _T4CC0	=	0x00ed
                    00EE    664 _T4CCTL1	=	0x00ee
                    00EF    665 _T4CC1	=	0x00ef
                    00D8    666 _TIMIF	=	0x00d8
                    0086    667 _U0CSR	=	0x0086
                    00C1    668 _U0DBUF	=	0x00c1
                    00C2    669 _U0BAUD	=	0x00c2
                    00C4    670 _U0UCR	=	0x00c4
                    00C5    671 _U0GCR	=	0x00c5
                    00F8    672 _U1CSR	=	0x00f8
                    00F9    673 _U1DBUF	=	0x00f9
                    00FA    674 _U1BAUD	=	0x00fa
                    00FB    675 _U1UCR	=	0x00fb
                    00FC    676 _U1GCR	=	0x00fc
                    00C9    677 _WDCTL	=	0x00c9
                            678 ;--------------------------------------------------------
                            679 ; special function bits
                            680 ;--------------------------------------------------------
                            681 	.area RSEG    (ABS,DATA)
   0000                     682 	.org 0x0000
                    0087    683 _P0_7	=	0x0087
                    0086    684 _P0_6	=	0x0086
                    0085    685 _P0_5	=	0x0085
                    0084    686 _P0_4	=	0x0084
                    0083    687 _P0_3	=	0x0083
                    0082    688 _P0_2	=	0x0082
                    0081    689 _P0_1	=	0x0081
                    0080    690 _P0_0	=	0x0080
                    008F    691 _URX1IF	=	0x008f
                    008D    692 _ADCIF	=	0x008d
                    008B    693 _URX0IF	=	0x008b
                    008A    694 _IT1	=	0x008a
                    0089    695 _RFERRIF	=	0x0089
                    0088    696 _IT0	=	0x0088
                    0097    697 _P1_7	=	0x0097
                    0096    698 _P1_6	=	0x0096
                    0095    699 _P1_5	=	0x0095
                    0094    700 _P1_4	=	0x0094
                    0093    701 _P1_3	=	0x0093
                    0092    702 _P1_2	=	0x0092
                    0091    703 _P1_1	=	0x0091
                    0090    704 _P1_0	=	0x0090
                    0099    705 _ENCIF_1	=	0x0099
                    0098    706 _ENCIF_0	=	0x0098
                    00A7    707 _P2_7	=	0x00a7
                    00A6    708 _P2_6	=	0x00a6
                    00A5    709 _P2_5	=	0x00a5
                    00A4    710 _P2_4	=	0x00a4
                    00A3    711 _P2_3	=	0x00a3
                    00A2    712 _P2_2	=	0x00a2
                    00A1    713 _P2_1	=	0x00a1
                    00A0    714 _P2_0	=	0x00a0
                    00AF    715 _EA	=	0x00af
                    00AD    716 _STIE	=	0x00ad
                    00AC    717 _ENCIE	=	0x00ac
                    00AB    718 _URX1IE	=	0x00ab
                    00AA    719 _URX0IE	=	0x00aa
                    00A9    720 _ADCIE	=	0x00a9
                    00A8    721 _RFERRIE	=	0x00a8
                    00BD    722 _P0IE	=	0x00bd
                    00BC    723 _T4IE	=	0x00bc
                    00BB    724 _T3IE	=	0x00bb
                    00BA    725 _T2IE	=	0x00ba
                    00B9    726 _T1IE	=	0x00b9
                    00B8    727 _DMAIE	=	0x00b8
                    00C7    728 _STIF	=	0x00c7
                    00C5    729 _P0IF	=	0x00c5
                    00C4    730 _T4IF	=	0x00c4
                    00C3    731 _T3IF	=	0x00c3
                    00C2    732 _T2IF	=	0x00c2
                    00C1    733 _T1IF	=	0x00c1
                    00C0    734 _DMAIF	=	0x00c0
                    00D7    735 _CY	=	0x00d7
                    00D6    736 _AC	=	0x00d6
                    00D5    737 _F0	=	0x00d5
                    00D4    738 _RS1	=	0x00d4
                    00D3    739 _RS0	=	0x00d3
                    00D2    740 _OV	=	0x00d2
                    00D1    741 _F1	=	0x00d1
                    00D0    742 _P	=	0x00d0
                    00E7    743 _ACC_7	=	0x00e7
                    00E6    744 _ACC_6	=	0x00e6
                    00E5    745 _ACC_5	=	0x00e5
                    00E4    746 _ACC_4	=	0x00e4
                    00E3    747 _ACC_3	=	0x00e3
                    00E2    748 _ACC_2	=	0x00e2
                    00E1    749 _ACC_1	=	0x00e1
                    00E0    750 _ACC_0	=	0x00e0
                    00EC    751 _WDTIF	=	0x00ec
                    00EB    752 _P1IF	=	0x00eb
                    00EA    753 _UTX1IF	=	0x00ea
                    00E9    754 _UTX0IF	=	0x00e9
                    00E8    755 _P2IF	=	0x00e8
                    00F7    756 _B_7	=	0x00f7
                    00F6    757 _B_6	=	0x00f6
                    00F5    758 _B_5	=	0x00f5
                    00F4    759 _B_4	=	0x00f4
                    00F3    760 _B_3	=	0x00f3
                    00F2    761 _B_2	=	0x00f2
                    00F1    762 _B_1	=	0x00f1
                    00F0    763 _B_0	=	0x00f0
                    00DE    764 _OVFIM	=	0x00de
                    00DD    765 _T4CH1IF	=	0x00dd
                    00DC    766 _T4CH0IF	=	0x00dc
                    00DB    767 _T4OVFIF	=	0x00db
                    00DA    768 _T3CH1IF	=	0x00da
                    00D9    769 _T3CH0IF	=	0x00d9
                    00D8    770 _T3OVFIF	=	0x00d8
                    00FF    771 _MODE	=	0x00ff
                    00FE    772 _RE	=	0x00fe
                    00FD    773 _SLAVE	=	0x00fd
                    00FC    774 _FE	=	0x00fc
                    00FB    775 _ERR	=	0x00fb
                    00FA    776 _RX_BYTE	=	0x00fa
                    00F9    777 _TX_BYTE	=	0x00f9
                    00F8    778 _ACTIVE	=	0x00f8
                            779 ;--------------------------------------------------------
                            780 ; overlayable register banks
                            781 ;--------------------------------------------------------
                            782 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     783 	.ds 8
                            784 ;--------------------------------------------------------
                            785 ; internal ram data
                            786 ;--------------------------------------------------------
                            787 	.area DSEG    (DATA)
                            788 ;--------------------------------------------------------
                            789 ; overlayable items in internal ram 
                            790 ;--------------------------------------------------------
                            791 	.area OSEG    (OVR,DATA)
                            792 ;--------------------------------------------------------
                            793 ; indirectly addressable internal ram data
                            794 ;--------------------------------------------------------
                            795 	.area ISEG    (DATA)
                            796 ;--------------------------------------------------------
                            797 ; absolute internal ram data
                            798 ;--------------------------------------------------------
                            799 	.area IABS    (ABS,DATA)
                            800 	.area IABS    (ABS,DATA)
                            801 ;--------------------------------------------------------
                            802 ; bit data
                            803 ;--------------------------------------------------------
                            804 	.area BSEG    (BIT)
                            805 ;--------------------------------------------------------
                            806 ; paged external ram data
                            807 ;--------------------------------------------------------
                            808 	.area PSEG    (PAG,XDATA)
                            809 ;--------------------------------------------------------
                            810 ; external ram data
                            811 ;--------------------------------------------------------
                            812 	.area XSEG    (XDATA)
                    61A6    813 _MONMUX	=	0x61a6
                    61A6    814 _OPAMPMC	=	0x61a6
                    6230    815 _I2CCFG	=	0x6230
                    6231    816 _I2CSTAT	=	0x6231
                    6232    817 _I2CDATA	=	0x6232
                    6233    818 _I2CADDR	=	0x6233
                    6234    819 _I2CWC	=	0x6234
                    6235    820 _I2CIO	=	0x6235
                    6243    821 _OBSSEL0	=	0x6243
                    6244    822 _OBSSEL1	=	0x6244
                    6245    823 _OBSSEL2	=	0x6245
                    6246    824 _OBSSEL3	=	0x6246
                    6247    825 _OBSSEL4	=	0x6247
                    6248    826 _OBSSEL5	=	0x6248
                    6249    827 _CHVER	=	0x6249
                    624A    828 _CHIPID	=	0x624a
                    624B    829 _TESTREG0	=	0x624b
                    6260    830 _DBGDATA	=	0x6260
                    6262    831 _SRCRC	=	0x6262
                    6264    832 _BATTMON	=	0x6264
                    6265    833 _IVCTRL	=	0x6265
                    6270    834 _FCTL	=	0x6270
                    6271    835 _FADDRL	=	0x6271
                    6272    836 _FADDRH	=	0x6272
                    6273    837 _FWDATA	=	0x6273
                    6276    838 _CHIPINFO0	=	0x6276
                    6277    839 _CHIPINFO1	=	0x6277
                    6281    840 _IRCTL	=	0x6281
                    6290    841 _CLD	=	0x6290
                    62A0    842 _XX_T1CCTL0	=	0x62a0
                    62A1    843 _XX_T1CCTL1	=	0x62a1
                    62A2    844 _XX_T1CCTL2	=	0x62a2
                    62A3    845 _T1CCTL3	=	0x62a3
                    62A4    846 _T1CCTL4	=	0x62a4
                    62A6    847 _XX_T1CC0L	=	0x62a6
                    62A7    848 _XX_T1CC0H	=	0x62a7
                    62A8    849 _XX_T1CC1L	=	0x62a8
                    62A9    850 _XX_T1CC1H	=	0x62a9
                    62AA    851 _XX_T1CC2L	=	0x62aa
                    62AB    852 _XX_T1CC2H	=	0x62ab
                    62AC    853 _T1CC3L	=	0x62ac
                    62AD    854 _T1CC3H	=	0x62ad
                    62AE    855 _T1CC4L	=	0x62ae
                    62AF    856 _T1CC4H	=	0x62af
                    62B0    857 _STCC	=	0x62b0
                    62B1    858 _STCS	=	0x62b1
                    62B2    859 _STCV0	=	0x62b2
                    62B3    860 _STCV1	=	0x62b3
                    62B4    861 _STCV2	=	0x62b4
                    62C0    862 _OPAMPC	=	0x62c0
                    62C1    863 _OPAMPS	=	0x62c1
                    62D0    864 _CMPCTL	=	0x62d0
                    6000    865 _RFCORE_RAM	=	0x6000
                    6000    866 _RXFIFO	=	0x6000
                    6080    867 _TXFIFO	=	0x6080
                    6100    868 _SRC_ADDR_TABLE	=	0x6100
                    6160    869 _SRCRESMASK0	=	0x6160
                    6161    870 _SRCRESMASK1	=	0x6161
                    6162    871 _SRCRESMASK2	=	0x6162
                    6163    872 _SRCRESINDEX	=	0x6163
                    6164    873 _SRCEXTPENDEN0	=	0x6164
                    6165    874 _SRCEXTPENDEN1	=	0x6165
                    6166    875 _SRCEXTPENDEN2	=	0x6166
                    6167    876 _SRCSHORTPENDEN0	=	0x6167
                    6168    877 _SRCSHORTPENDEN1	=	0x6168
                    6169    878 _SRCSHORTPENDEN2	=	0x6169
                    616A    879 _EXT_ADDR0	=	0x616a
                    616B    880 _EXT_ADDR1	=	0x616b
                    616C    881 _EXT_ADDR2	=	0x616c
                    616D    882 _EXT_ADDR3	=	0x616d
                    616E    883 _EXT_ADDR4	=	0x616e
                    616F    884 _EXT_ADDR5	=	0x616f
                    6170    885 _EXT_ADDR6	=	0x6170
                    6171    886 _EXT_ADDR7	=	0x6171
                    6172    887 _PAN_ID0	=	0x6172
                    6173    888 _PAN_ID1	=	0x6173
                    6174    889 _SHORT_ADDR0	=	0x6174
                    6175    890 _SHORT_ADDR1	=	0x6175
                    6180    891 _FRMFILT0	=	0x6180
                    6181    892 _FRMFILT1	=	0x6181
                    6182    893 _SRCMATCH	=	0x6182
                    6183    894 _SRCSHORTEN0	=	0x6183
                    6184    895 _SRCSHORTEN1	=	0x6184
                    6185    896 _SRCSHORTEN2	=	0x6185
                    6186    897 _SRCEXTEN0	=	0x6186
                    6187    898 _SRCEXTEN1	=	0x6187
                    6188    899 _SRCEXTEN2	=	0x6188
                    6189    900 _FRMCTRL0	=	0x6189
                    618A    901 _FRMCTRL1	=	0x618a
                    618B    902 _RXENABLE	=	0x618b
                    618C    903 _RXMASKSET	=	0x618c
                    618D    904 _RXMASKCLR	=	0x618d
                    618E    905 _FREQTUNE	=	0x618e
                    618F    906 _FREQCTRL	=	0x618f
                    6190    907 _TXPOWER	=	0x6190
                    6191    908 _TXCTRL	=	0x6191
                    6192    909 _FSMSTAT0	=	0x6192
                    6193    910 _FSMSTAT1	=	0x6193
                    6194    911 _FIFOPCTRL	=	0x6194
                    6195    912 _FSMCTRL	=	0x6195
                    6196    913 _CCACTRL0	=	0x6196
                    6197    914 _CCACTRL1	=	0x6197
                    6198    915 _RSSI	=	0x6198
                    6199    916 _RSSISTAT	=	0x6199
                    619A    917 _RXFIRST	=	0x619a
                    619B    918 _RXFIFOCNT	=	0x619b
                    619C    919 _TXFIFOCNT	=	0x619c
                    619D    920 _RXFIRST_PTR	=	0x619d
                    619E    921 _RXLAST_PTR	=	0x619e
                    619F    922 _RXP1_PTR	=	0x619f
                    61A1    923 _TXFIRST_PTR	=	0x61a1
                    61A2    924 _TXLAST_PTR	=	0x61a2
                    61A3    925 _RFIRQM0	=	0x61a3
                    61A4    926 _RFIRQM1	=	0x61a4
                    61A5    927 _RFERRM	=	0x61a5
                    61A7    928 _RFRND	=	0x61a7
                    61A8    929 _MDMCTRL0	=	0x61a8
                    61A9    930 _MDMCTRL1	=	0x61a9
                    61AA    931 _FREQEST	=	0x61aa
                    61AB    932 _RXCTRL	=	0x61ab
                    61AC    933 _FSCTRL	=	0x61ac
                    61AD    934 _FSCAL0	=	0x61ad
                    61AE    935 _FSCAL1	=	0x61ae
                    61AF    936 _FSCAL2	=	0x61af
                    61B0    937 _FSCAL3	=	0x61b0
                    61B1    938 _AGCCTRL0	=	0x61b1
                    61B2    939 _AGCCTRL1	=	0x61b2
                    61B3    940 _AGCCTRL2	=	0x61b3
                    61B4    941 _AGCCTRL3	=	0x61b4
                    61B5    942 _ADCTEST0	=	0x61b5
                    61B6    943 _ADCTEST1	=	0x61b6
                    61B7    944 _ADCTEST2	=	0x61b7
                    61B8    945 _MDMTEST0	=	0x61b8
                    61B9    946 _MDMTEST1	=	0x61b9
                    61BA    947 _DACTEST0	=	0x61ba
                    61BB    948 _DACTEST1	=	0x61bb
                    61BC    949 _DACTEST2	=	0x61bc
                    61BD    950 _ATEST	=	0x61bd
                    61BE    951 _PTEST0	=	0x61be
                    61BF    952 _PTEST1	=	0x61bf
                    61FA    953 _TXFILTCFG	=	0x61fa
                    61EB    954 _RFC_OBS_CTRL0	=	0x61eb
                    61EC    955 _RFC_OBS_CTRL1	=	0x61ec
                    61ED    956 _RFC_OBS_CTRL2	=	0x61ed
                    61C0    957 _CSPPROG0	=	0x61c0
                    61C1    958 _CSPPROG1	=	0x61c1
                    61C2    959 _CSPPROG2	=	0x61c2
                    61C3    960 _CSPPROG3	=	0x61c3
                    61C4    961 _CSPPROG4	=	0x61c4
                    61C5    962 _CSPPROG5	=	0x61c5
                    61C6    963 _CSPPROG6	=	0x61c6
                    61C7    964 _CSPPROG7	=	0x61c7
                    61C8    965 _CSPPROG8	=	0x61c8
                    61C9    966 _CSPPROG9	=	0x61c9
                    61CA    967 _CSPPROG10	=	0x61ca
                    61CB    968 _CSPPROG11	=	0x61cb
                    61CC    969 _CSPPROG12	=	0x61cc
                    61CD    970 _CSPPROG13	=	0x61cd
                    61CE    971 _CSPPROG14	=	0x61ce
                    61CF    972 _CSPPROG15	=	0x61cf
                    61D0    973 _CSPPROG16	=	0x61d0
                    61D1    974 _CSPPROG17	=	0x61d1
                    61D2    975 _CSPPROG18	=	0x61d2
                    61D3    976 _CSPPROG19	=	0x61d3
                    61D4    977 _CSPPROG20	=	0x61d4
                    61D5    978 _CSPPROG21	=	0x61d5
                    61D6    979 _CSPPROG22	=	0x61d6
                    61D7    980 _CSPPROG23	=	0x61d7
                    61E0    981 _CSPCTRL	=	0x61e0
                    61E1    982 _CSPSTAT	=	0x61e1
                    61E2    983 _CSPX	=	0x61e2
                    61E3    984 _CSPY	=	0x61e3
                    61E4    985 _CSPZ	=	0x61e4
                    61E5    986 _CSPT	=	0x61e5
                    6200    987 _USBADDR	=	0x6200
                    6201    988 _USBPOW	=	0x6201
                    6202    989 _USBIIF	=	0x6202
                    6204    990 _USBOIF	=	0x6204
                    6206    991 _USBCIF	=	0x6206
                    6207    992 _USBIIE	=	0x6207
                    6209    993 _USBOIE	=	0x6209
                    620B    994 _USBCIE	=	0x620b
                    620C    995 _USBFRML	=	0x620c
                    620D    996 _USBFRMH	=	0x620d
                    620E    997 _USBINDEX	=	0x620e
                    620F    998 _USBCTRL	=	0x620f
                    6210    999 _USBMAXI	=	0x6210
                    6211   1000 _USBCS0	=	0x6211
                    6211   1001 _USBCSIL	=	0x6211
                    6212   1002 _USBCSIH	=	0x6212
                    6213   1003 _USBMAXO	=	0x6213
                    6214   1004 _USBCSOL	=	0x6214
                    6215   1005 _USBCSOH	=	0x6215
                    6216   1006 _USBCNT0	=	0x6216
                    6216   1007 _USBCNTL	=	0x6216
                    6217   1008 _USBCNTH	=	0x6217
                    6220   1009 _USBF0	=	0x6220
                    6222   1010 _USBF1	=	0x6222
                    6224   1011 _USBF2	=	0x6224
                    6226   1012 _USBF3	=	0x6226
                    6228   1013 _USBF4	=	0x6228
                    622A   1014 _USBF5	=	0x622a
                    7080   1015 _X_P0	=	0x7080
                    7086   1016 _X_U0CSR	=	0x7086
                    7089   1017 _X_P0IFG	=	0x7089
                    708A   1018 _X_P1IFG	=	0x708a
                    708B   1019 _X_P2IFG	=	0x708b
                    708C   1020 _X_PICTL	=	0x708c
                    708D   1021 _X_P1IEN	=	0x708d
                    708F   1022 _X_P0INP	=	0x708f
                    7090   1023 _X_P1	=	0x7090
                    7091   1024 _X_RFIRQF1	=	0x7091
                    7093   1025 _X_MPAGE	=	0x7093
                    7093   1026 _X__XPAGE	=	0x7093
                    7094   1027 _X_T2CTRL	=	0x7094
                    7095   1028 _X_ST0	=	0x7095
                    7096   1029 _X_ST1	=	0x7096
                    7097   1030 _X_ST2	=	0x7097
                    709C   1031 _X_T2EVTCFG	=	0x709c
                    709D   1032 _X_SLEEPSTA	=	0x709d
                    709E   1033 _X_CLKCONSTA	=	0x709e
                    709F   1034 _X_FMAP	=	0x709f
                    709F   1035 _X_PSBANK	=	0x709f
                    70A0   1036 _X_P2	=	0x70a0
                    70A1   1037 _X_T2IRQF	=	0x70a1
                    70A2   1038 _X_T2M0	=	0x70a2
                    70A3   1039 _X_T2M1	=	0x70a3
                    70A4   1040 _X_T2MOVF0	=	0x70a4
                    70A5   1041 _X_T2MOVF1	=	0x70a5
                    70A6   1042 _X_T2MOVF2	=	0x70a6
                    70A7   1043 _X_T2IRQM	=	0x70a7
                    70AB   1044 _X_P0IEN	=	0x70ab
                    70AC   1045 _X_P2IEN	=	0x70ac
                    70AD   1046 _X_STLOAD	=	0x70ad
                    70AE   1047 _X_PMUX	=	0x70ae
                    70AF   1048 _X_T1STAT	=	0x70af
                    70B1   1049 _X_ENCDI	=	0x70b1
                    70B2   1050 _X_ENCDO	=	0x70b2
                    70B3   1051 _X_ENCCS	=	0x70b3
                    70B4   1052 _X_ADCCON1	=	0x70b4
                    70B5   1053 _X_ADCCON2	=	0x70b5
                    70B6   1054 _X_ADCCON3	=	0x70b6
                    70BA   1055 _X_ADCL	=	0x70ba
                    70BB   1056 _X_ADCH	=	0x70bb
                    70BC   1057 _X_RNDL	=	0x70bc
                    70BD   1058 _X_RNDH	=	0x70bd
                    70BE   1059 _X_SLEEPCMD	=	0x70be
                    70BF   1060 _X_RFERRF	=	0x70bf
                    70C1   1061 _X_U0DBUF	=	0x70c1
                    70C2   1062 _X_U0BAUD	=	0x70c2
                    70C3   1063 _X_T2MSEL	=	0x70c3
                    70C4   1064 _X_U0UCR	=	0x70c4
                    70C5   1065 _X_U0GCR	=	0x70c5
                    70C6   1066 _X_CLKCONCMD	=	0x70c6
                    70C7   1067 _X_MEMCTR	=	0x70c7
                    70C9   1068 _X_WDCTL	=	0x70c9
                    70CA   1069 _X_T3CNT	=	0x70ca
                    70CB   1070 _X_T3CTL	=	0x70cb
                    70CC   1071 _X_T3CCTL0	=	0x70cc
                    70CD   1072 _X_T3CC0	=	0x70cd
                    70CE   1073 _X_T3CCTL1	=	0x70ce
                    70CF   1074 _X_T3CC1	=	0x70cf
                    70D1   1075 _X_DMAIRQ	=	0x70d1
                    70D2   1076 _X_DMA1CFGL	=	0x70d2
                    70D3   1077 _X_DMA1CFGH	=	0x70d3
                    70D4   1078 _X_DMA0CFGL	=	0x70d4
                    70D5   1079 _X_DMA0CFGH	=	0x70d5
                    70D6   1080 _X_DMAARM	=	0x70d6
                    70D7   1081 _X_DMAREQ	=	0x70d7
                    70D8   1082 _X_TIMIF	=	0x70d8
                    70D9   1083 _X_RFD	=	0x70d9
                    70DA   1084 _X_T1CC0L	=	0x70da
                    70DB   1085 _X_T1CC0H	=	0x70db
                    70DC   1086 _X_T1CC1L	=	0x70dc
                    70DD   1087 _X_T1CC1H	=	0x70dd
                    70DE   1088 _X_T1CC2L	=	0x70de
                    70DF   1089 _X_T1CC2H	=	0x70df
                    70E1   1090 _X_RFST	=	0x70e1
                    70E2   1091 _X_T1CNTL	=	0x70e2
                    70E3   1092 _X_T1CNTH	=	0x70e3
                    70E4   1093 _X_T1CTL	=	0x70e4
                    70E5   1094 _X_T1CCTL0	=	0x70e5
                    70E6   1095 _X_T1CCTL1	=	0x70e6
                    70E7   1096 _X_T1CCTL2	=	0x70e7
                    70E9   1097 _X_RFIRQF0	=	0x70e9
                    70EA   1098 _X_T4CNT	=	0x70ea
                    70EB   1099 _X_T4CTL	=	0x70eb
                    70EC   1100 _X_T4CCTL0	=	0x70ec
                    70ED   1101 _X_T4CC0	=	0x70ed
                    70EE   1102 _X_T4CCTL1	=	0x70ee
                    70EF   1103 _X_T4CC1	=	0x70ef
                    70F1   1104 _X_PERCFG	=	0x70f1
                    70F2   1105 _X_APCFG	=	0x70f2
                    70F3   1106 _X_P0SEL	=	0x70f3
                    70F4   1107 _X_P1SEL	=	0x70f4
                    70F5   1108 _X_P2SEL	=	0x70f5
                    70F6   1109 _X_P1INP	=	0x70f6
                    70F7   1110 _X_P2INP	=	0x70f7
                    70F8   1111 _X_U1CSR	=	0x70f8
                    70F9   1112 _X_U1DBUF	=	0x70f9
                    70FA   1113 _X_U1BAUD	=	0x70fa
                    70FB   1114 _X_U1UCR	=	0x70fb
                    70FC   1115 _X_U1GCR	=	0x70fc
                    70FD   1116 _X_P0DIR	=	0x70fd
                    70FE   1117 _X_P1DIR	=	0x70fe
                    70FF   1118 _X_P2DIR	=	0x70ff
                    7800   1119 _X_INFOPAGE	=	0x7800
                    780C   1120 _X_IEEE_ADDR	=	0x780c
   0000                    1121 _subscribers_memb_memb_count:
   0000                    1122 	.ds 1
   0001                    1123 _subscribers_memb_memb_mem:
   0001                    1124 	.ds 36
                           1125 ;--------------------------------------------------------
                           1126 ; absolute external ram data
                           1127 ;--------------------------------------------------------
                           1128 	.area XABS    (ABS,XDATA)
                           1129 ;--------------------------------------------------------
                           1130 ; external initialized ram data
                           1131 ;--------------------------------------------------------
                           1132 	.area XISEG   (XDATA)
   0000                    1133 _subscribers_memb:
   0000                    1134 	.ds 10
                           1135 	.area HOME    (CODE)
                           1136 	.area GSINIT0 (CODE)
                           1137 	.area GSINIT1 (CODE)
                           1138 	.area GSINIT2 (CODE)
                           1139 	.area GSINIT3 (CODE)
                           1140 	.area GSINIT4 (CODE)
                           1141 	.area GSINIT5 (CODE)
                           1142 	.area GSINIT  (CODE)
                           1143 	.area GSFINAL (CODE)
                           1144 	.area CSEG    (CODE)
                           1145 ;--------------------------------------------------------
                           1146 ; global & static initialisations
                           1147 ;--------------------------------------------------------
                           1148 	.area HOME    (CODE)
                           1149 	.area GSINIT  (CODE)
                           1150 	.area GSFINAL (CODE)
                           1151 	.area GSINIT  (CODE)
                           1152 ;--------------------------------------------------------
                           1153 ; Home
                           1154 ;--------------------------------------------------------
                           1155 	.area HOME    (CODE)
                           1156 	.area HOME    (CODE)
                           1157 ;--------------------------------------------------------
                           1158 ; code
                           1159 ;--------------------------------------------------------
                           1160 	.area BANK1   (CODE)
                           1161 ;------------------------------------------------------------
                           1162 ;Allocation info for local variables in function 'subscribers_mem_pool_init'
                           1163 ;------------------------------------------------------------
                           1164 ;	subscriber.c:13: void subscribers_mem_pool_init()
                           1165 ;	-----------------------------------------
                           1166 ;	 function subscribers_mem_pool_init
                           1167 ;	-----------------------------------------
   0000                    1168 _subscribers_mem_pool_init:
                    0007   1169 	ar7 = 0x07
                    0006   1170 	ar6 = 0x06
                    0005   1171 	ar5 = 0x05
                    0004   1172 	ar4 = 0x04
                    0003   1173 	ar3 = 0x03
                    0002   1174 	ar2 = 0x02
                    0001   1175 	ar1 = 0x01
                    0000   1176 	ar0 = 0x00
                           1177 ;	subscriber.c:15: memb_init(&subscribers_memb); 
   0000 90s00r00           1178 	mov	dptr,#_subscribers_memb
   0003 75 F0 00           1179 	mov	b,#0x00
   0006 78r00              1180 	mov	r0,#_memb_init
   0008 79s00              1181 	mov	r1,#(_memb_init >> 8)
   000A 7As00              1182 	mov	r2,#(_memb_init >> 16)
   000C 12s00r00           1183 	lcall	__sdcc_banked_call
   000F 02s00r00           1184 	ljmp	__sdcc_banked_ret
                           1185 ;------------------------------------------------------------
                           1186 ;Allocation info for local variables in function 'subscriber_alloc'
                           1187 ;------------------------------------------------------------
                           1188 ;sub                       Allocated to registers r5 r6 r7 
                           1189 ;------------------------------------------------------------
                           1190 ;	subscriber.c:18: subscriber_t *subscriber_alloc()
                           1191 ;	-----------------------------------------
                           1192 ;	 function subscriber_alloc
                           1193 ;	-----------------------------------------
   0012                    1194 _subscriber_alloc:
                           1195 ;	subscriber.c:22: sub = (subscriber_t *)memb_alloc(&subscribers_memb);
   0012 90s00r00           1196 	mov	dptr,#_subscribers_memb
   0015 75 F0 00           1197 	mov	b,#0x00
   0018 78r00              1198 	mov	r0,#_memb_alloc
   001A 79s00              1199 	mov	r1,#(_memb_alloc >> 8)
   001C 7As00              1200 	mov	r2,#(_memb_alloc >> 16)
   001E 12s00r00           1201 	lcall	__sdcc_banked_call
   0021 AD 82              1202 	mov	r5,dpl
   0023 AE 83              1203 	mov	r6,dph
   0025 AF F0              1204 	mov	r7,b
                           1205 ;	subscriber.c:23: if (sub) {
   0027 ED                 1206 	mov	a,r5
   0028 4E                 1207 	orl	a,r6
   0029 60 08              1208 	jz	00102$
                           1209 ;	subscriber.c:24: return sub;
   002B 8D 82              1210 	mov	dpl,r5
   002D 8E 83              1211 	mov	dph,r6
   002F 8F F0              1212 	mov	b,r7
   0031 80 06              1213 	sjmp	00103$
   0033                    1214 00102$:
                           1215 ;	subscriber.c:27: return NULL;
   0033 90 00 00           1216 	mov	dptr,#0x0000
   0036 75 F0 00           1217 	mov	b,#0x00
   0039                    1218 00103$:
   0039 02s00r00           1219 	ljmp	__sdcc_banked_ret
                           1220 ;------------------------------------------------------------
                           1221 ;Allocation info for local variables in function 'subscriber_free'
                           1222 ;------------------------------------------------------------
                           1223 ;subscriber                Allocated to registers r5 r6 r7 
                           1224 ;------------------------------------------------------------
                           1225 ;	subscriber.c:30: void subscriber_free(subscriber_t *subscriber)
                           1226 ;	-----------------------------------------
                           1227 ;	 function subscriber_free
                           1228 ;	-----------------------------------------
   003C                    1229 _subscriber_free:
   003C AD 82              1230 	mov	r5,dpl
   003E AE 83              1231 	mov	r6,dph
   0040 AF F0              1232 	mov	r7,b
                           1233 ;	subscriber.c:32: memb_free(&subscribers_memb, subscriber);
   0042 C0 05              1234 	push	ar5
   0044 C0 06              1235 	push	ar6
   0046 C0 07              1236 	push	ar7
   0048 90s00r00           1237 	mov	dptr,#_subscribers_memb
   004B 75 F0 00           1238 	mov	b,#0x00
   004E 78r00              1239 	mov	r0,#_memb_free
   0050 79s00              1240 	mov	r1,#(_memb_free >> 8)
   0052 7As00              1241 	mov	r2,#(_memb_free >> 16)
   0054 12s00r00           1242 	lcall	__sdcc_banked_call
   0057 15 81              1243 	dec	sp
   0059 15 81              1244 	dec	sp
   005B 15 81              1245 	dec	sp
   005D 02s00r00           1246 	ljmp	__sdcc_banked_ret
                           1247 ;------------------------------------------------------------
                           1248 ;Allocation info for local variables in function 'subscriber_value_compare_type_init'
                           1249 ;------------------------------------------------------------
                           1250 ;addr                      Allocated to stack - sp -8
                           1251 ;device_id                 Allocated to stack - sp -11
                           1252 ;operation                 Allocated to stack - sp -12
                           1253 ;value                     Allocated to stack - sp -15
                           1254 ;subscriber                Allocated to stack - sp -2
                           1255 ;------------------------------------------------------------
                           1256 ;	subscriber.c:35: int32_t subscriber_value_compare_type_init(subscriber_t *subscriber, uip_ip6addr_t *addr, 
                           1257 ;	-----------------------------------------
                           1258 ;	 function subscriber_value_compare_type_init
                           1259 ;	-----------------------------------------
   0060                    1260 _subscriber_value_compare_type_init:
   0060 C0 82              1261 	push	dpl
   0062 C0 83              1262 	push	dph
   0064 C0 F0              1263 	push	b
                           1264 ;	subscriber.c:39: if (!subscriber) {
   0066 A8 81              1265 	mov	r0,sp
   0068 18                 1266 	dec	r0
   0069 18                 1267 	dec	r0
   006A E6                 1268 	mov	a,@r0
   006B 08                 1269 	inc	r0
   006C 46                 1270 	orl	a,@r0
   006D 70 09              1271 	jnz	00102$
                           1272 ;	subscriber.c:40: return FAIL;
   006F 90 00 00           1273 	mov	dptr,#(0x00&0x00ff)
   0072 E4                 1274 	clr	a
   0073 F5 F0              1275 	mov	b,a
   0075 02s01r73           1276 	ljmp	00103$
   0078                    1277 00102$:
                           1278 ;	subscriber.c:43: memcpy(&(subscriber->ip6_addr), addr, sizeof(uip_ip6addr_t));
   0078 E5 81              1279 	mov	a,sp
   007A 24 F8              1280 	add	a,#0xf8
   007C F8                 1281 	mov	r0,a
   007D 86 02              1282 	mov	ar2,@r0
   007F 08                 1283 	inc	r0
   0080 86 03              1284 	mov	ar3,@r0
   0082 08                 1285 	inc	r0
   0083 86 04              1286 	mov	ar4,@r0
   0085 A8 81              1287 	mov	r0,sp
   0087 18                 1288 	dec	r0
   0088 18                 1289 	dec	r0
   0089 74 06              1290 	mov	a,#0x06
   008B 26                 1291 	add	a,@r0
   008C FD                 1292 	mov	r5,a
   008D E4                 1293 	clr	a
   008E 08                 1294 	inc	r0
   008F 36                 1295 	addc	a,@r0
   0090 FE                 1296 	mov	r6,a
   0091 08                 1297 	inc	r0
   0092 86 07              1298 	mov	ar7,@r0
   0094 74 10              1299 	mov	a,#0x10
   0096 C0 E0              1300 	push	acc
   0098 E4                 1301 	clr	a
   0099 C0 E0              1302 	push	acc
   009B C0 02              1303 	push	ar2
   009D C0 03              1304 	push	ar3
   009F C0 04              1305 	push	ar4
   00A1 8D 82              1306 	mov	dpl,r5
   00A3 8E 83              1307 	mov	dph,r6
   00A5 8F F0              1308 	mov	b,r7
   00A7 78r00              1309 	mov	r0,#_memcpy
   00A9 79s00              1310 	mov	r1,#(_memcpy >> 8)
   00AB 7As00              1311 	mov	r2,#(_memcpy >> 16)
   00AD 12s00r00           1312 	lcall	__sdcc_banked_call
   00B0 E5 81              1313 	mov	a,sp
   00B2 24 FB              1314 	add	a,#0xfb
                           1315 ;	subscriber.c:44: memcpy(subscriber->device_id, device_id, DEV_ID_SIZE);
   00B4 F5 81              1316 	mov	sp,a
   00B6 24 F5              1317 	add	a,#0xf5
   00B8 F8                 1318 	mov	r0,a
   00B9 86 05              1319 	mov	ar5,@r0
   00BB 08                 1320 	inc	r0
   00BC 86 06              1321 	mov	ar6,@r0
   00BE 08                 1322 	inc	r0
   00BF 86 07              1323 	mov	ar7,@r0
   00C1 A8 81              1324 	mov	r0,sp
   00C3 18                 1325 	dec	r0
   00C4 18                 1326 	dec	r0
   00C5 74 16              1327 	mov	a,#0x16
   00C7 26                 1328 	add	a,@r0
   00C8 FA                 1329 	mov	r2,a
   00C9 E4                 1330 	clr	a
   00CA 08                 1331 	inc	r0
   00CB 36                 1332 	addc	a,@r0
   00CC FB                 1333 	mov	r3,a
   00CD 08                 1334 	inc	r0
   00CE 86 04              1335 	mov	ar4,@r0
   00D0 74 08              1336 	mov	a,#0x08
   00D2 C0 E0              1337 	push	acc
   00D4 E4                 1338 	clr	a
   00D5 C0 E0              1339 	push	acc
   00D7 C0 05              1340 	push	ar5
   00D9 C0 06              1341 	push	ar6
   00DB C0 07              1342 	push	ar7
   00DD 8A 82              1343 	mov	dpl,r2
   00DF 8B 83              1344 	mov	dph,r3
   00E1 8C F0              1345 	mov	b,r4
   00E3 78r00              1346 	mov	r0,#_memcpy
   00E5 79s00              1347 	mov	r1,#(_memcpy >> 8)
   00E7 7As00              1348 	mov	r2,#(_memcpy >> 16)
   00E9 12s00r00           1349 	lcall	__sdcc_banked_call
   00EC E5 81              1350 	mov	a,sp
   00EE 24 FB              1351 	add	a,#0xfb
   00F0 F5 81              1352 	mov	sp,a
                           1353 ;	subscriber.c:45: subscriber->condition_type = CONDITION_TYPE_VALUE_COMPARE;
   00F2 A8 81              1354 	mov	r0,sp
   00F4 18                 1355 	dec	r0
   00F5 18                 1356 	dec	r0
   00F6 74 1E              1357 	mov	a,#0x1E
   00F8 26                 1358 	add	a,@r0
   00F9 FD                 1359 	mov	r5,a
   00FA E4                 1360 	clr	a
   00FB 08                 1361 	inc	r0
   00FC 36                 1362 	addc	a,@r0
   00FD FE                 1363 	mov	r6,a
   00FE 08                 1364 	inc	r0
   00FF 86 07              1365 	mov	ar7,@r0
   0101 8D 82              1366 	mov	dpl,r5
   0103 8E 83              1367 	mov	dph,r6
   0105 8F F0              1368 	mov	b,r7
   0107 74 01              1369 	mov	a,#0x01
   0109 12s00r00           1370 	lcall	__gptrput
                           1371 ;	subscriber.c:46: subscriber->condition.operation = operation;
   010C A8 81              1372 	mov	r0,sp
   010E 18                 1373 	dec	r0
   010F 18                 1374 	dec	r0
   0110 74 1F              1375 	mov	a,#0x1F
   0112 26                 1376 	add	a,@r0
   0113 FD                 1377 	mov	r5,a
   0114 E4                 1378 	clr	a
   0115 08                 1379 	inc	r0
   0116 36                 1380 	addc	a,@r0
   0117 FE                 1381 	mov	r6,a
   0118 08                 1382 	inc	r0
   0119 86 07              1383 	mov	ar7,@r0
   011B 8D 82              1384 	mov	dpl,r5
   011D 8E 83              1385 	mov	dph,r6
   011F 8F F0              1386 	mov	b,r7
   0121 E5 81              1387 	mov	a,sp
   0123 24 F4              1388 	add	a,#0xf4
   0125 F8                 1389 	mov	r0,a
   0126 E6                 1390 	mov	a,@r0
   0127 12s00r00           1391 	lcall	__gptrput
                           1392 ;	subscriber.c:47: memcpy(&subscriber->condition.value, value, sizeof(cond_value_u));
   012A E5 81              1393 	mov	a,sp
   012C 24 F1              1394 	add	a,#0xf1
   012E F8                 1395 	mov	r0,a
   012F 86 05              1396 	mov	ar5,@r0
   0131 08                 1397 	inc	r0
   0132 86 06              1398 	mov	ar6,@r0
   0134 08                 1399 	inc	r0
   0135 86 07              1400 	mov	ar7,@r0
   0137 A8 81              1401 	mov	r0,sp
   0139 18                 1402 	dec	r0
   013A 18                 1403 	dec	r0
   013B 74 1F              1404 	mov	a,#0x1F
   013D 26                 1405 	add	a,@r0
   013E FA                 1406 	mov	r2,a
   013F E4                 1407 	clr	a
   0140 08                 1408 	inc	r0
   0141 36                 1409 	addc	a,@r0
   0142 FB                 1410 	mov	r3,a
   0143 08                 1411 	inc	r0
   0144 86 04              1412 	mov	ar4,@r0
   0146 0A                 1413 	inc	r2
   0147 BA 00 01           1414 	cjne	r2,#0x00,00108$
   014A 0B                 1415 	inc	r3
   014B                    1416 00108$:
   014B 74 04              1417 	mov	a,#0x04
   014D C0 E0              1418 	push	acc
   014F E4                 1419 	clr	a
   0150 C0 E0              1420 	push	acc
   0152 C0 05              1421 	push	ar5
   0154 C0 06              1422 	push	ar6
   0156 C0 07              1423 	push	ar7
   0158 8A 82              1424 	mov	dpl,r2
   015A 8B 83              1425 	mov	dph,r3
   015C 8C F0              1426 	mov	b,r4
   015E 78r00              1427 	mov	r0,#_memcpy
   0160 79s00              1428 	mov	r1,#(_memcpy >> 8)
   0162 7As00              1429 	mov	r2,#(_memcpy >> 16)
   0164 12s00r00           1430 	lcall	__sdcc_banked_call
   0167 E5 81              1431 	mov	a,sp
   0169 24 FB              1432 	add	a,#0xfb
   016B F5 81              1433 	mov	sp,a
                           1434 ;	subscriber.c:49: return SUCCESS;
   016D 90 00 01           1435 	mov	dptr,#(0x01&0x00ff)
   0170 E4                 1436 	clr	a
   0171 F5 F0              1437 	mov	b,a
   0173                    1438 00103$:
   0173 15 81              1439 	dec	sp
   0175 15 81              1440 	dec	sp
   0177 15 81              1441 	dec	sp
   0179 02s00r00           1442 	ljmp	__sdcc_banked_ret
                           1443 ;------------------------------------------------------------
                           1444 ;Allocation info for local variables in function 'subscriber_report_type_init'
                           1445 ;------------------------------------------------------------
                           1446 ;addr                      Allocated to stack - sp -8
                           1447 ;device_id                 Allocated to stack - sp -11
                           1448 ;subscriber                Allocated to stack - sp -2
                           1449 ;------------------------------------------------------------
                           1450 ;	subscriber.c:52: int32_t subscriber_report_type_init(subscriber_t *subscriber, uip_ip6addr_t *addr, 
                           1451 ;	-----------------------------------------
                           1452 ;	 function subscriber_report_type_init
                           1453 ;	-----------------------------------------
   017C                    1454 _subscriber_report_type_init:
   017C C0 82              1455 	push	dpl
   017E C0 83              1456 	push	dph
   0180 C0 F0              1457 	push	b
                           1458 ;	subscriber.c:55: if (!subscriber) {
   0182 A8 81              1459 	mov	r0,sp
   0184 18                 1460 	dec	r0
   0185 18                 1461 	dec	r0
   0186 E6                 1462 	mov	a,@r0
   0187 08                 1463 	inc	r0
   0188 46                 1464 	orl	a,@r0
   0189 70 09              1465 	jnz	00102$
                           1466 ;	subscriber.c:56: return FAIL;
   018B 90 00 00           1467 	mov	dptr,#(0x00&0x00ff)
   018E E4                 1468 	clr	a
   018F F5 F0              1469 	mov	b,a
   0191 02s02r2D           1470 	ljmp	00103$
   0194                    1471 00102$:
                           1472 ;	subscriber.c:59: memcpy(&(subscriber->ip6_addr), addr, sizeof(uip_ip6addr_t));
   0194 E5 81              1473 	mov	a,sp
   0196 24 F8              1474 	add	a,#0xf8
   0198 F8                 1475 	mov	r0,a
   0199 86 02              1476 	mov	ar2,@r0
   019B 08                 1477 	inc	r0
   019C 86 03              1478 	mov	ar3,@r0
   019E 08                 1479 	inc	r0
   019F 86 04              1480 	mov	ar4,@r0
   01A1 A8 81              1481 	mov	r0,sp
   01A3 18                 1482 	dec	r0
   01A4 18                 1483 	dec	r0
   01A5 74 06              1484 	mov	a,#0x06
   01A7 26                 1485 	add	a,@r0
   01A8 FD                 1486 	mov	r5,a
   01A9 E4                 1487 	clr	a
   01AA 08                 1488 	inc	r0
   01AB 36                 1489 	addc	a,@r0
   01AC FE                 1490 	mov	r6,a
   01AD 08                 1491 	inc	r0
   01AE 86 07              1492 	mov	ar7,@r0
   01B0 74 10              1493 	mov	a,#0x10
   01B2 C0 E0              1494 	push	acc
   01B4 E4                 1495 	clr	a
   01B5 C0 E0              1496 	push	acc
   01B7 C0 02              1497 	push	ar2
   01B9 C0 03              1498 	push	ar3
   01BB C0 04              1499 	push	ar4
   01BD 8D 82              1500 	mov	dpl,r5
   01BF 8E 83              1501 	mov	dph,r6
   01C1 8F F0              1502 	mov	b,r7
   01C3 78r00              1503 	mov	r0,#_memcpy
   01C5 79s00              1504 	mov	r1,#(_memcpy >> 8)
   01C7 7As00              1505 	mov	r2,#(_memcpy >> 16)
   01C9 12s00r00           1506 	lcall	__sdcc_banked_call
   01CC E5 81              1507 	mov	a,sp
   01CE 24 FB              1508 	add	a,#0xfb
                           1509 ;	subscriber.c:60: memcpy(subscriber->device_id, device_id, DEV_ID_SIZE);
   01D0 F5 81              1510 	mov	sp,a
   01D2 24 F5              1511 	add	a,#0xf5
   01D4 F8                 1512 	mov	r0,a
   01D5 86 05              1513 	mov	ar5,@r0
   01D7 08                 1514 	inc	r0
   01D8 86 06              1515 	mov	ar6,@r0
   01DA 08                 1516 	inc	r0
   01DB 86 07              1517 	mov	ar7,@r0
   01DD A8 81              1518 	mov	r0,sp
   01DF 18                 1519 	dec	r0
   01E0 18                 1520 	dec	r0
   01E1 74 16              1521 	mov	a,#0x16
   01E3 26                 1522 	add	a,@r0
   01E4 FA                 1523 	mov	r2,a
   01E5 E4                 1524 	clr	a
   01E6 08                 1525 	inc	r0
   01E7 36                 1526 	addc	a,@r0
   01E8 FB                 1527 	mov	r3,a
   01E9 08                 1528 	inc	r0
   01EA 86 04              1529 	mov	ar4,@r0
   01EC 74 08              1530 	mov	a,#0x08
   01EE C0 E0              1531 	push	acc
   01F0 E4                 1532 	clr	a
   01F1 C0 E0              1533 	push	acc
   01F3 C0 05              1534 	push	ar5
   01F5 C0 06              1535 	push	ar6
   01F7 C0 07              1536 	push	ar7
   01F9 8A 82              1537 	mov	dpl,r2
   01FB 8B 83              1538 	mov	dph,r3
   01FD 8C F0              1539 	mov	b,r4
   01FF 78r00              1540 	mov	r0,#_memcpy
   0201 79s00              1541 	mov	r1,#(_memcpy >> 8)
   0203 7As00              1542 	mov	r2,#(_memcpy >> 16)
   0205 12s00r00           1543 	lcall	__sdcc_banked_call
   0208 E5 81              1544 	mov	a,sp
   020A 24 FB              1545 	add	a,#0xfb
   020C F5 81              1546 	mov	sp,a
                           1547 ;	subscriber.c:61: subscriber->condition_type = CONDITION_TYPE_REPORT;
   020E A8 81              1548 	mov	r0,sp
   0210 18                 1549 	dec	r0
   0211 18                 1550 	dec	r0
   0212 74 1E              1551 	mov	a,#0x1E
   0214 26                 1552 	add	a,@r0
   0215 FD                 1553 	mov	r5,a
   0216 E4                 1554 	clr	a
   0217 08                 1555 	inc	r0
   0218 36                 1556 	addc	a,@r0
   0219 FE                 1557 	mov	r6,a
   021A 08                 1558 	inc	r0
   021B 86 07              1559 	mov	ar7,@r0
   021D 8D 82              1560 	mov	dpl,r5
   021F 8E 83              1561 	mov	dph,r6
   0221 8F F0              1562 	mov	b,r7
   0223 E4                 1563 	clr	a
   0224 12s00r00           1564 	lcall	__gptrput
                           1565 ;	subscriber.c:63: return SUCCESS;
   0227 90 00 01           1566 	mov	dptr,#(0x01&0x00ff)
   022A E4                 1567 	clr	a
   022B F5 F0              1568 	mov	b,a
   022D                    1569 00103$:
   022D 15 81              1570 	dec	sp
   022F 15 81              1571 	dec	sp
   0231 15 81              1572 	dec	sp
   0233 02s00r00           1573 	ljmp	__sdcc_banked_ret
                           1574 	.area CSEG    (CODE)
                           1575 	.area CONST   (CODE)
                           1576 	.area XINIT   (CODE)
   0000                    1577 __xinit__subscribers_memb:
   0000 24 00              1578 	.byte #0x24,#0x00	; 36
   0002 01 00              1579 	.byte #0x01,#0x00	; 1
   0004r00s00 00           1580 	.byte _subscribers_memb_memb_count,(_subscribers_memb_memb_count >> 8),#0x00
   0007r01s00 00           1581 	.byte _subscribers_memb_memb_mem,(_subscribers_memb_memb_mem >> 8),#0x00
                           1582 	.area CABS    (ABS,CODE)
